A <- cbind(ones, ones, #initial intercept and slope
ID, rain, hum, wind, pres, w, #intercepts
ID, rain, hum, wind, pres, w) #slope
# final model
lm4 = lm(normcon~tempdiff+ID+rain+hum+wind_spd+pressure+ weekday+tempdiff*ID+tempdiff*rain+tempdiff*hum+tempdiff*wind_spd+tempdiff*pressure+tempdiff*weekday,data = dfWG)
library(kableExtra)
lm4s <- summary(lm4, correlation = TRUE)
kable_styling( kable(lm4s$correlation, digits = 3), full_width = FALSE)
## Intercepts
A_int <- cbind(ones, zeros, #initial intercept and slope
ID, rain, hum, wind, pres, w, #intercepts
matrix(0,n,n-1), zeros, zeros, zeros, zeros, matrix(0,n,6)) #slope
est <- A_int %*% lm4s$coefficients[,1]
var_est <- A_int %*% lm4s$cov.unscaled %*% t(A_int) * lm4s$sigma^2
coef_int <- data.frame(Group=levels(dfWG$ID), Intercept = est, sd.error=sqrt(diag(var_est)))
## Slopes
A_slope <- cbind(ones, zeros, #initial intercept and slope
matrix(0,n,n-1), zeros, zeros, zeros, zeros, matrix(0,n,6),
ID, rain, hum, wind, pres, w) #slope
est <- A_slope %*% lm4s$coefficients[,1]
var_est <- A_slope %*% lm4s$cov.unscaled %*% t(A_slope) * lm4s$sigma^2
coef_slope <- data.frame(Group=levels(dfWG$ID), Slope = est, sd.error=sqrt(diag(var_est)))
max(coef_slope[,2])
min(coef_slope[,2])
# Initial intercept: rain0, weekday1
ids <- unique(dfWG$ID)
n <- length(ids)
ones <- rep(1,n)
zeros <- rep(0,n)
# varibales
x_rain <- 1 #0 if no rain, 1 if rain
x_hum <- 73 #humidity level
x_wind <- 15 #wind speed
x_pres <- 1015 #pressure level
weekday <- 3 #weekday number
# vectors
ID <- diag(n)
ID <- ID[,-1]
rain <- rep(x_rain,n)
hum <- rep(x_hum,n)
wind <- rep(x_wind,n)
pres <- rep(x_pres,n)
w <- matrix(0,n,6)
w[,weekday] <- rep(1,n)
A <- cbind(ones, ones, #initial intercept and slope
ID, rain, hum, wind, pres, w, #intercepts
ID, rain, hum, wind, pres, w) #slope
# final model
lm4 = lm(normcon~tempdiff+ID+rain+hum+wind_spd+pressure+ weekday+tempdiff*ID+tempdiff*rain+tempdiff*hum+tempdiff*wind_spd+tempdiff*pressure+tempdiff*weekday,data = dfWG)
library(kableExtra)
lm4s <- summary(lm4, correlation = TRUE)
kable_styling( kable(lm4s$correlation, digits = 3), full_width = FALSE)
## Intercepts
A_int <- cbind(ones, zeros, #initial intercept and slope
ID, rain, hum, wind, pres, w, #intercepts
matrix(0,n,n-1), zeros, zeros, zeros, zeros, matrix(0,n,6)) #slope
est <- A_int %*% lm4s$coefficients[,1]
var_est <- A_int %*% lm4s$cov.unscaled %*% t(A_int) * lm4s$sigma^2
coef_int <- data.frame(Group=levels(dfWG$ID), Intercept = est, sd.error=sqrt(diag(var_est)))
## Slopes
A_slope <- cbind(zeros, ones, #initial intercept and slope
matrix(0,n,n-1), zeros, zeros, zeros, zeros, matrix(0,n,6),
ID, rain, hum, wind, pres, w) #slope
est <- A_slope %*% lm4s$coefficients[,1]
var_est <- A_slope %*% lm4s$cov.unscaled %*% t(A_slope) * lm4s$sigma^2
coef_slope <- data.frame(Group=levels(dfWG$ID), Slope = est, sd.error=sqrt(diag(var_est)))
max(coef_slope[,2])
min(coef_slope[,2])
summary(lm4)
View(coef_int)
## Intercepts
A_int <- cbind(ones, zeros, #initial intercept and slope
ID, #intercepts
matrix(0,n,n-1)) #slope
est <- A_int %*% lm4s$coefficients[,1]
summary(lm4)
## Intercepts
A_int <- cbind(ones, zeros, #initial intercept and slope
ID, #intercepts
matrix(0,n,n-1)) #slope
est <- A_int %*% lm4s$coefficients[,1]
length(A_int)
length(lm4s$coefficients[,1])
plot_year <- function(year){
as.character(year)
year_str <- substr(names(monthdata_sorted),1,4)
year_num <- match(year_str, year)
month_list <- (monthdata_sorted[year_num==1])
month_list_short <- month_list[-which(sapply(month_list, is.null))]
par(mfrow=c(2,6))
for(name in names(month_list_short)){
plot_simpel(month_list_short[[name]])
}
}
plot_year(2017)
######################## Start på tidsrækkeanalyse ########################
library(raster)
library(foreign)
# install.packages("forecast")
library(forecast)
source("cool_funcs.R")
rm()
rm()
### Import data
# https://archive.ics.uci.edu/dataset/477/real+estate+valuation+data+set
library("readxl")
data <- read_excel('data.xlsx')
setwd("~/Desktop/SCV mini project")
### Import data
# https://archive.ics.uci.edu/dataset/477/real+estate+valuation+data+set
library("readxl")
data <- read_excel('data.xlsx')
colnames(data) <- c("No","date","age", "distance", "conv_stores", "lat", "long", "price")
str(data)
head(data)
#install.packages("GGally")
library(GGally)
data <- subset(data, select = -c(No))
ggpairs((data))
# We see that distance is very skewed, so we transform it
data$distance <- log(data$distance)
ggpairs((data))
par(mfrow = c(1, ncol(data)))
invisible(lapply(1:ncol(data), function(i) boxplot(data[, i],main=names(data)[i])))
fig1 <- ggplot(data, aes(data$date, data$price)) + geom_point() + stat_smooth(method="lm")
fig2 <- ggplot(data, aes(data$age, data$price)) + geom_point() + stat_smooth(method="lm")
fig3 <- ggplot(data, aes(data$distance, data$price)) + geom_point() + stat_smooth(method="lm")
fig4 <- ggplot(data, aes(data$conv_stores, data$price)) + geom_point() + stat_smooth(method="lm")
fig5 <- ggplot(data, aes(data$lat, data$price)) + geom_point() + stat_smooth(method="lm")
fig6 <- ggplot(data, aes(data$long, data$price)) + geom_point() + stat_smooth(method="lm")
library(ggpubr)
ggarrange(fig1, fig2, fig3, fig4, fig5, fig6)
fig7 <- ggplot(data, aes(data$lat, data$distance)) + geom_point() + stat_smooth(method="lm")
fig8 <- ggplot(data, aes(data$long, data$distance)) + geom_point() + stat_smooth(method="lm", xlab="Age")
ggarrange(fig7, fig8)
ggpairs((data))
library("readxl")
data <- read_excel('data.xlsx')
colnames(data) <- c("No","date","age", "distance", "conv_stores", "lat", "long", "price")
str(data)
head(data)
library(GGally)
data <- subset(data, select = -c(No))
ggpairs((data))
# Looking at the distribution of the variable 'distance', we see that it is heavily right-skewed.
# To fix this we log-transform this 'distance'. The variable 'long' altso seems sk
data$distance <- log(data$distance)
data$price <- log(data$price)
ggpairs((data))
data <- read_excel('data.xlsx')
colnames(data) <- c("No","date","age", "distance", "conv_stores", "lat", "long", "price")
str(data)
head(data)
library(GGally)
data <- subset(data, select = -c(No))
ggpairs((data))
# Looking at the distribution of the variable 'distance', we see that it is heavily right-skewed.
# To fix this we log-transform this 'distance'. The variable 'long' altso seems sk
#data$distance <- log(data$distance)
data$price <- log(data$price)
ggpairs((data))
?lm
lm(data$price~data$lat+data$long)
data$distance <- log(data$distance)
data$price <- log(data$price)
ggpairs((data))
par(mfrow = c(1, ncol(data)))
invisible(lapply(1:ncol(data), function(i) boxplot(data[, i],main=names(data)[i])))
data <- read_excel('data.xlsx')
colnames(data) <- c("No","date","age", "distance", "conv_stores", "lat", "long", "price")
str(data)
head(data)
library(GGally)
data <- subset(data, select = -c(No))
par(mfrow = c(1, ncol(data)))
invisible(lapply(1:ncol(data), function(i) boxplot(data[, i],main=names(data)[i])))
data$distance <- log(data$distance)
data$price <- log(data$price)
ggpairs((data))
par(mfrow = c(1, ncol(data)))
invisible(lapply(1:ncol(data), function(i) boxplot(data[, i],main=names(data)[i])))
data <- read_excel('data.xlsx')
colnames(data) <- c("No","date","age", "distance", "conv_stores", "lat", "long", "price")
str(data)
head(data)
library(GGally)
data <- subset(data, select = -c(No))
par(mfrow = c(1, ncol(data)))
invisible(lapply(1:ncol(data), function(i) boxplot(data[, i],main=names(data)[i])))
ggpairs((data))
data$distance <- log(data$distance)
data$price <- log(data$price)
ggpairs((data))
par(mfrow = c(1, ncol(data)))
invisible(lapply(1:ncol(data), function(i) boxplot(data[, i],main=names(data)[i])))
fig1 <- ggplot(data, aes(data$date, data$price)) + geom_point() + stat_smooth(method="lm")
fig2 <- ggplot(data, aes(data$age, data$price)) + geom_point() + stat_smooth(method="lm")
fig3 <- ggplot(data, aes(data$distance, data$price)) + geom_point() + stat_smooth(method="lm")
fig4 <- ggplot(data, aes(data$conv_stores, data$price)) + geom_point() + stat_smooth(method="lm")
fig5 <- ggplot(data, aes(data$lat, data$price)) + geom_point() + stat_smooth(method="lm")
fig6 <- ggplot(data, aes(data$long, data$price)) + geom_point() + stat_smooth(method="lm")
library(ggpubr)
ggarrange(fig1, fig2, fig3, fig4, fig5, fig6)
data$distance <- log(data$distance)
data$price <- log(data$price)
ggpairs((data))
par(mfrow = c(1, ncol(data)))
invisible(lapply(1:ncol(data), function(i) boxplot(data[, i],main=names(data)[i])))
fig1 <- ggplot(data, aes(data$date, data$price)) + geom_point() + stat_smooth(method="lm")
fig2 <- ggplot(data, aes(data$age, data$price)) + geom_point() + stat_smooth(method="lm")
fig3 <- ggplot(data, aes(data$distance, data$price)) + geom_point() + stat_smooth(method="lm")
fig4 <- ggplot(data, aes(data$conv_stores, data$price)) + geom_point() + stat_smooth(method="lm")
fig5 <- ggplot(data, aes(data$lat, data$price)) + geom_point() + stat_smooth(method="lm")
fig6 <- ggplot(data, aes(data$long, data$price)) + geom_point() + stat_smooth(method="lm")
library(ggpubr)
ggarrange(fig1, fig2, fig3, fig4, fig5, fig6)
library("readxl")
data <- read_excel('data.xlsx')
colnames(data) <- c("No","date","age", "distance", "conv_stores", "lat", "long", "price")
str(data)
head(data)
library(GGally)
data <- subset(data, select = -c(No))
par(mfrow = c(1, ncol(data)))
invisible(lapply(1:ncol(data), function(i) boxplot(data[, i],main=names(data)[i])))
ggpairs((data))
ggpairs((data))
data$distance <- log(data$distance)
data$price <- log(data$price)
ggpairs((data))
data$distance <- log10(data$distance)
data$price <- log10(data$price)
ggpairs((data))
?log
library("readxl")
data <- read_excel('data.xlsx')
colnames(data) <- c("No","date","age", "distance", "conv_stores", "lat", "long", "price")
str(data)
head(data)
library(GGally)
data <- subset(data, select = -c(No))
par(mfrow = c(1, ncol(data)))
invisible(lapply(1:ncol(data), function(i) boxplot(data[, i],main=names(data)[i])))
ggpairs((data))
# Just looking at the data, there seem to be a nice distribution for the variables overall.
# Looking at the distribution of the variable 'distance' and the response-variable 'price', we see that it is heavily right-skewed.
# To fix this we log-transform this 'distance'. The variable 'long' also seems to be skewed, but doesn't change much with
# a log-transformation, so we keep it as it is.
data$distance <- log10(data$distance)
data$price <- log10(data$price)
ggpairs((data))
corrplot(cor(data))
library(corrplot)
corrplot(cor(data))
M <- cor(data)
corrplot(M)
?par
par(mfrow=1)
par(mfrow=c(1,1))
M <- cor(data)
corrplot(M)
corrplot(cor(data), method="numbers")
corrplot(cor(data), method="number")
View(data)
names(data)
data <- read_excel('data.xlsx')
colnames(data) <- c("No","date","age", "dist_MRT", "conv_stores", "lat", "long", "price")
str(data)
head(data)
library(GGally)
data <- subset(data, select = -c(No))
par(mfrow = c(1, ncol(data)))
invisible(lapply(1:ncol(data), function(i) boxplot(data[, i],main=names(data)[i])))
data$distance <- log10(data$distance)
data$distance <- log10(data$distance)
data$distance <- log10(data$distance)
data$price <- log10(data$price)
library("readxl")
data <- read_excel('data.xlsx')
colnames(data) <- c("No","date","age", "dist_MRT", "conv_stores", "lat", "long", "price")
str(data)
head(data)
library(GGally)
data <- subset(data, select = -c(No))
data$distance <- log10(data$distance)
data$distance <- log(data$distance)
data$distance <- log10(data$dist_MRT)
data$price <- log10(data$dist_MRT)
library(corrplot)
par(mfrow=c(1,1))
M <- cor(data)
corrplot(cor(data), method="number")
data
library("readxl")
data <- read_excel('data.xlsx')
colnames(data) <- c("No","date","age", "dist_MRT", "conv_stores", "lat", "long", "price")
str(data)
head(data)
library(GGally)
data <- subset(data, select = -c(No))
#par(mfrow = c(1, ncol(data)))
#invisible(lapply(1:ncol(data), function(i) boxplot(data[, i],main=names(data)[i])))
ggpairs((data))
# Just looking at the data, there seem to be a nice distribution for the variables overall.
# Looking at the distribution of the variable 'distance' and the response-variable 'price', we see that it is heavily right-skewed.
# To fix this we log-transform this 'distance'. The variable 'long' also seems to be skewed, but doesn't change much with
# a log-transformation, so we keep it as it is.
data$dist_MRT <- log10(data$dist_MRT)
data$price <- log10(data$dist_MRT)
?stat_smooth
fig1 <- ggplot(data, aes(data$date, data$price)) + geom_point() + stat_smooth(method="lm")
fig2 <- ggplot(data, aes(data$age, data$price)) + geom_point() + stat_smooth(method="lm")
fig3 <- ggplot(data, aes(data$dist_MRT, data$price)) + geom_point() + stat_smooth(method="lm")
fig4 <- ggplot(data, aes(data$conv_stores, data$price)) + geom_point() + stat_smooth(method="lm")
fig5 <- ggplot(data, aes(data$lat, data$price)) + geom_point() + stat_smooth(method="lm")
fig6 <- ggplot(data, aes(data$long, data$price)) + geom_point() + stat_smooth(method="lm")
fig1 <- ggplot(data, aes(data$date, data$price)) + geom_point()
fig2 <- ggplot(data, aes(data$age, data$price)) + geom_point() + stat_smooth(method="lm")
fig3 <- ggplot(data, aes(data$dist_MRT, data$price)) + geom_point() + stat_smooth(method="lm")
fig4 <- ggplot(data, aes(data$conv_stores, data$price)) + geom_point() + stat_smooth(method="lm")
fig5 <- ggplot(data, aes(data$lat, data$price)) + geom_point() + stat_smooth(method="lm")
fig6 <- ggplot(data, aes(data$long, data$price)) + geom_point() + stat_smooth(method="lm")
library(ggpubr)
ggarrange(fig1, fig2, fig3, fig4, fig5, fig6)
fig1 <- ggplot(data, aes(date, price)) + geom_point() + stat_smooth(method="lm")
fig2 <- ggplot(data, aes(data$age, data$price)) + geom_point() + stat_smooth(method="lm")
fig3 <- ggplot(data, aes(data$dist_MRT, data$price)) + geom_point() + stat_smooth(method="lm")
fig4 <- ggplot(data, aes(data$conv_stores, data$price)) + geom_point() + stat_smooth(method="lm")
fig5 <- ggplot(data, aes(data$lat, data$price)) + geom_point() + stat_smooth(method="lm")
fig6 <- ggplot(data, aes(data$long, data$price)) + geom_point() + stat_smooth(method="lm")
library(ggpubr)
ggarrange(fig1, fig2, fig3, fig4, fig5, fig6)
library(corrplot)
par(mfrow=c(1,1))
M <- cor(data)
corrplot(cor(data), method="number")
fig1 <- ggplot(data, aes(date, price)) + geom_point() + stat_smooth(method="lm")
fig2 <- ggplot(data, aes(data$age, data$price)) + geom_point() + stat_smooth(method="lm")
fig3 <- ggplot(data, aes(data$dist_MRT, data$price)) + geom_point() + stat_smooth(method="lm")
fig4 <- ggplot(data, aes(data$conv_stores, data$price)) + geom_point() + stat_smooth(method="lm")
fig5 <- ggplot(data, aes(data$lat, data$price)) + geom_point() + stat_smooth(method="lm")
fig6 <- ggplot(data, aes(data$long, data$price)) + geom_point() + stat_smooth(method="lm")
library(ggpubr)
ggarrange(fig1, fig2, fig3, fig4, fig5, fig6)
### Import data
# https://archive.ics.uci.edu/dataset/477/real+estate+valuation+data+set
library("readxl")
data <- read_excel('data.xlsx')
colnames(data) <- c("No","date","age", "dist_MRT", "conv_stores", "lat", "long", "price")
str(data)
head(data)
library(GGally)
data <- subset(data, select = -c(No))
#par(mfrow = c(1, ncol(data)))
#invisible(lapply(1:ncol(data), function(i) boxplot(data[, i],main=names(data)[i])))
#ggpairs((data))
"
Just looking at the data, there seem to be a nice distribution for the variables overall.
Looking at the distribution of the variable 'distance' and the response-variable 'price', we see that it is heavily right-skewed.
To fix this we log-transform this 'distance'. The variable 'long' also seems to be skewed, but doesn't change much with
a log-transformation, so we keep it as it is.
"
data$dist_MRT <- log10(data$dist_MRT)
data$price <- log10(data$dist_MRT)
"
We know want to explore the correlation in the variables.
"
library(corrplot)
par(mfrow=c(1,1))
M <- cor(data)
corrplot(cor(data), method="number")
"
We see that 'price' has a strong correlation with several of the variables,
but there is also correlation between the variables themselves.
To explre this further we want to do some regression plots on the variables.
Firstly we want to plot each variable with the response-variable 'price'.
"
fig1 <- ggplot(data, aes(date, price)) + geom_point() + stat_smooth(method="lm")
fig2 <- ggplot(data, aes(data$age, data$price)) + geom_point() + stat_smooth(method="lm")
fig3 <- ggplot(data, aes(data$dist_MRT, data$price)) + geom_point() + stat_smooth(method="lm")
fig4 <- ggplot(data, aes(data$conv_stores, data$price)) + geom_point() + stat_smooth(method="lm")
fig5 <- ggplot(data, aes(data$lat, data$price)) + geom_point() + stat_smooth(method="lm")
fig6 <- ggplot(data, aes(data$long, data$price)) + geom_point() + stat_smooth(method="lm")
library(ggpubr)
ggarrange(fig1, fig2, fig3, fig4, fig5, fig6)
"
"
fig7 <- ggplot(data, aes(data$lat, data$dist_MRT)) + geom_point() + stat_smooth(method="lm")
fig8 <- ggplot(data, aes(data$long, data$dist_MRT)) + geom_point() + stat_smooth(method="lm", xlab="Age")
ggarrange(fig7, fig8)
library(corrplot)
par(mfrow=c(1,1))
M <- cor(data)
corrplot(cor(data), method="number")
---
title: "**Title of the report**"
fig7 <- ggplot(data, aes(data$lat, data$dist_MRT)) + geom_point() + stat_smooth(method="lm")
fig8 <- ggplot(data, aes(data$long, data$dist_MRT)) + geom_point() + stat_smooth(method="lm", xlab="Age")
ggarrange(fig7, fig8)
### Import data
# https://archive.ics.uci.edu/dataset/477/real+estate+valuation+data+set
library("readxl")
data <- read_excel('data.xlsx')
colnames(data) <- c("No","date","age", "dist_MRT", "conv_stores", "lat", "long", "price")
str(data)
head(data)
library(GGally)
data <- subset(data, select = -c(No))
#par(mfrow = c(1, ncol(data)))
#invisible(lapply(1:ncol(data), function(i) boxplot(data[, i],main=names(data)[i])))
#ggpairs((data))
"
Just looking at the data, there seem to be a nice distribution for the variables overall.
Looking at the distribution of the variable `distance` and the response-variable `price`, we see that it is heavily right-skewed.
To fix this we log-transform this `distance`. The variable `long` also seems to be skewed, but doesn't change much with
a log-transformation, so we keep it as it is.
"
data$dist_MRT <- log10(data$dist_MRT)
data$price <- log10(data$price)
"
We know want to explore the correlation in the variables.
"
library(corrplot)
par(mfrow=c(1,1))
M <- cor(data)
corrplot(cor(data), method="number")
"
We see that `price` has a strong correlation with several of the variables,
but there is also correlation between the variables themselves.
To explore this further we want to do some regression plots on the variables.
Firstly we want to plot each variable with the response-variable `price`.
"
fig1 <- ggplot(data, aes(date, price)) + geom_point() + stat_smooth(method="lm")
fig2 <- ggplot(data, aes(data$age, data$price)) + geom_point() + stat_smooth(method="lm")
fig3 <- ggplot(data, aes(data$dist_MRT, data$price)) + geom_point() + stat_smooth(method="lm")
fig4 <- ggplot(data, aes(data$conv_stores, data$price)) + geom_point() + stat_smooth(method="lm")
fig5 <- ggplot(data, aes(data$lat, data$price)) + geom_point() + stat_smooth(method="lm")
fig6 <- ggplot(data, aes(data$long, data$price)) + geom_point() + stat_smooth(method="lm")
library(ggpubr)
ggarrange(fig1, fig2, fig3, fig4, fig5, fig6)
"
Looking at the regression plots, we see that `price` has a high correletation with `dist_MRT`, which we also saw in the correlation plot.
We also see, that there is a high correlation with the three variables `conv_stores`, `lat` and `long`.
This makes sence though, since number of convenience stores in the area and the distance to the metro,
is dependent on where the house is located (latitude and longitude).
For this reason we plotted `dist_MRT`, `conv_stores` and also `price` with the two variables `lat` and `long`.
"
fig7 <- ggplot(data, aes(data$lat, data$dist_MRT)) + geom_point() + stat_smooth(method="lm")
fig8 <- ggplot(data, aes(data$long, data$dist_MRT)) + geom_point() + stat_smooth(method="lm", xlab="Age")
ggarrange(fig7, fig8)
fig7 <- ggplot(data, aes(data$lat, data$dist_MRT)) + geom_point() + stat_smooth(method="lm")
fig8 <- ggplot(data, aes(data$long, data$dist_MRT)) + geom_point() + stat_smooth(method="lm", xlab="Age")
ggarrange(fig7, fig8)
### Import data
# https://archive.ics.uci.edu/dataset/477/real+estate+valuation+data+set
library("readxl")
data <- read_excel('data.xlsx')
colnames(data) <- c("No","date","age", "dist_MRT", "conv_stores", "lat", "long", "price")
str(data)
head(data)
data <- subset(data, select = -c(No))
ggpairs((data))
"
Just looking at the data, there seem to be a nice distribution for the variables overall.
Looking at the distribution of the variable `distance` and the response-variable `price`, we see that it is heavily right-skewed.
To fix this we log-transform this `distance`. The variable `long` also seems to be skewed, but doesn't change much with
a log-transformation, so we keep it as it is.
"
data$dist_MRT <- log10(data$dist_MRT)
data$price <- log10(data$price)
"
We know want to explore the correlation in the variables.
"
library(corrplot)
par(mfrow=c(1,1))
M <- cor(data)
corrplot(cor(data), method="number")
"
We see that `price` has a strong correlation with several of the variables,
but there is also correlation between the variables themselves.
To explore this further we want to do some regression plots on the variables.
Firstly we want to plot each variable with the response-variable `price`.
"
fig1 <- ggplot(data, aes(date, price)) + geom_point() + stat_smooth(method="lm")
fig2 <- ggplot(data, aes(data$age, data$price)) + geom_point() + stat_smooth(method="lm")
fig3 <- ggplot(data, aes(data$dist_MRT, data$price)) + geom_point() + stat_smooth(method="lm")
fig4 <- ggplot(data, aes(data$conv_stores, data$price)) + geom_point() + stat_smooth(method="lm")
fig5 <- ggplot(data, aes(data$lat, data$price)) + geom_point() + stat_smooth(method="lm")
fig6 <- ggplot(data, aes(data$long, data$price)) + geom_point() + stat_smooth(method="lm")
library(ggpubr)
ggarrange(fig1, fig2, fig3, fig4, fig5, fig6)
"
Looking at the regression plots, we see that `price` has a high correletation with `dist_MRT` `conv_stores`, `lat` and `long`, which we also saw in the correlation plot.
This makes sence though, since number of convenience stores in the area and the distance to the metro,
is dependent on where the house is located (latitude and longitude).
For this reason we plotted `dist_MRT`, `conv_stores` and also `price` with the two variables `lat` and `long`.
The plot for `conv_stores` with `lat` and `long` is shown below.
"
# Put plot here
"
All three plots show the same thing. There seems to be a city centre, where a lot of houses are located.
Here the distance to the metro is low, the number of convenience stores is high and the prices are high compared to the other locations.
"
library(corrplot)
par(mfrow=c(1,1))
M <- cor(data)
corrplot(cor(data), method="number")
require(gridExtra)
install.packages(gridExtra)
install.packages("gridExtra")
install.packages("gridExtra")
require(gridExtra)
